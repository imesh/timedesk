// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.timedesk.entity;

import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.timedesk.entity.ProjectDataOnDemand;
import org.timedesk.entity.ProjectPhase;

privileged aspect ProjectPhaseDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ProjectPhaseDataOnDemand: @Component;
    
    private Random ProjectPhaseDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<ProjectPhase> ProjectPhaseDataOnDemand.data;
    
    @Autowired
    private ProjectDataOnDemand ProjectPhaseDataOnDemand.projectDataOnDemand;
    
    public ProjectPhase ProjectPhaseDataOnDemand.getNewTransientProjectPhase(int index) {
        org.timedesk.entity.ProjectPhase obj = new org.timedesk.entity.ProjectPhase();
        obj.setDescription(null);
        obj.setEndDate(new java.util.Date());
        obj.setPhaseId(null);
        obj.setProject(projectDataOnDemand.getRandomProject());
        obj.setStartDate(new java.util.Date());
        return obj;
    }
    
    public ProjectPhase ProjectPhaseDataOnDemand.getSpecificProjectPhase(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        ProjectPhase obj = data.get(index);
        return ProjectPhase.findProjectPhase(obj.getId());
    }
    
    public ProjectPhase ProjectPhaseDataOnDemand.getRandomProjectPhase() {
        init();
        ProjectPhase obj = data.get(rnd.nextInt(data.size()));
        return ProjectPhase.findProjectPhase(obj.getId());
    }
    
    public boolean ProjectPhaseDataOnDemand.modifyProjectPhase(ProjectPhase obj) {
        return false;
    }
    
    public void ProjectPhaseDataOnDemand.init() {
        data = org.timedesk.entity.ProjectPhase.findProjectPhaseEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'ProjectPhase' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.timedesk.entity.ProjectPhase>();
        for (int i = 0; i < 10; i++) {
            org.timedesk.entity.ProjectPhase obj = getNewTransientProjectPhase(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
