// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.timedesk.entity;

import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.timedesk.entity.CompanySiteDataOnDemand;
import org.timedesk.entity.Holiday;

privileged aspect HolidayDataOnDemand_Roo_DataOnDemand {
    
    declare @type: HolidayDataOnDemand: @Component;
    
    private Random HolidayDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Holiday> HolidayDataOnDemand.data;
    
    @Autowired
    private CompanySiteDataOnDemand HolidayDataOnDemand.companySiteDataOnDemand;
    
    public Holiday HolidayDataOnDemand.getNewTransientHoliday(int index) {
        org.timedesk.entity.Holiday obj = new org.timedesk.entity.Holiday();
        obj.setCompanySite(companySiteDataOnDemand.getRandomCompanySite());
        obj.setDate(new java.util.Date());
        return obj;
    }
    
    public Holiday HolidayDataOnDemand.getSpecificHoliday(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Holiday obj = data.get(index);
        return Holiday.findHoliday(obj.getId());
    }
    
    public Holiday HolidayDataOnDemand.getRandomHoliday() {
        init();
        Holiday obj = data.get(rnd.nextInt(data.size()));
        return Holiday.findHoliday(obj.getId());
    }
    
    public boolean HolidayDataOnDemand.modifyHoliday(Holiday obj) {
        return false;
    }
    
    public void HolidayDataOnDemand.init() {
        data = org.timedesk.entity.Holiday.findHolidayEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Holiday' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.timedesk.entity.Holiday>();
        for (int i = 0; i < 10; i++) {
            org.timedesk.entity.Holiday obj = getNewTransientHoliday(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
